String Q1: Write a program which takes a string and prints the number of vowels, consonants(non-vowels).
 numbers and other characters. 

import java.io.*; 
  
public class GFG { 
    static void countCharacterType(String str) 
    { 

        int vowels = 0, consonant = 0, specialChar = 0,  
            digit = 0; 
        for (int i = 0; i < str.length(); i++) { 
              
            char ch = str.charAt(i); 
      
            if ( (ch >= 'a' && ch <= 'z') ||  
                (ch >= 'A' && ch <= 'Z') )
				{ 
                ch = Character.toLowerCase(ch);; 
      
                if (ch == 'a' || ch == 'e' || ch == 'i' || 
                    ch == 'o' || ch == 'u') 
                    vowels++; 
                else
                    consonant++; 
            } 
            else if (ch >= '0' && ch <= '9') 
                digit++; 
            else
                specialChar++; 
        } 
          
        System.out.println("Vowels: " + vowels); 
        System.out.println("Consonant: " + consonant); 
        System.out.println("Digit: " + digit); 
        System.out.println("Special Character: " + specialChar); 
    } 
      
    static public void main (String[] args) 
    { 
        String str = "geeks for geeks121"; 
          
        countCharacterType(str); 
    } 
} 


Q 2: Given a string which contains numbers from 0 to 9 expressed as words, output a string which
contains all numbers incremented by 1 


import java.util.Scanner;

public class Solution2 {
	public static void main(String[] args) {
		System.out.println("Enter your Sentence....");
		Scanner sc = new Scanner(System.in);
		String s = sc.nextLine(), s1 = "", s2 = "";
		int i;
		s = s + ' ';
		for (i = 0; i < s.length(); i++) {
			if (s.charAt(i) == ' ') {
				switch (s2) {
				case "zero":s2="one";
				break;
				case "one":
					s2 = "two";
					break;
				case "two":
					s2 = "three";
					break;
				case "three":
					s2 = "four";
					break;
				case "four":
					s2 = "five";
					break;
				case "five":
					s2 = "six";
					break;
				case "six":
					s2 = "seven";
					break;
				case "seven":
					s2 = "eight";
					break;
				case "eight":
					s2 = "nine";
					break;
				case "nine":
					s2 = "ten";
					break;
				}

				s1 = s1.concat(s2);
				s1 = s1 + ' ';
				s2 = "";
			} else
				s2 = s2 + s.charAt(i);
		}
		System.out.println("Your expected output is    ::");
		System.out.println();
		System.out.println(s1);
		sc.close();

	}
}


Q 3: Write a function to replace multiple consecutive occurrences of characters with a single character 


import java.util.*;

public class Solution3 {
	public static void main(String args[])
	{
		System.out.println("Enter any Sentence..");
		Scanner sc = new Scanner(System.in);
		String s = sc.nextLine();
		sc.close();
		String s1="";
		char a[]= s.toCharArray();
		int size = s.length();
		for(int i=0;i<size-1;i++)
		{
		if(a[i]==a[i+1])
		{
			a[i]=' ';
		
		}
		}
		for(int i=0;i<size;i++)
		{
			if(a[i]!=' ')
			{
				s1=s1+a[i];
			}
		}
		System.out.println("Your expwxted output is  ::");
		System.out.println();
		System.out.println(s1);
		}

}





Q:4 : Given a string, print the first non-repeating character in the string. 

class GFG { 
    static final int NO_OF_CHARS = 256; 
    static char count[] = new char[NO_OF_CHARS]; 
  
   
    static void getCharCountArray(String str) 
    { 
        for (int i = 0; i < str.length(); i++) 
            count[str.charAt(i)]++; 
    } 

    static int firstNonRepeating(String str) 
    { 
        getCharCountArray(str); 
        int index = -1, i; 
  
        for (i = 0; i < str.length(); i++) { 
            if (count[str.charAt(i)] == 1) { 
                index = i; 
                break; 
            } 
        } 
  
        return index; 
    } 
  
  
    public static void main(String[] args) 
    { 
        String str = "geeksforgeeks"; 
        int index = firstNonRepeating(str); 
  
        System.out.println( 
            index == -1
                ? "Either all characters are repeating or string "
                      + "is empty"
                : "First non-repeating character is "
                      + str.charAt(index)); 
    } 
} 



Q 5 :Write a program which prints the length of each word in a sentence. 



class CountCharacterInEachWords { 
    static void count(String str) 
    { 
       
        char[] ch = str.toCharArray(); 
        for (int i = 0; i < ch.length; i++) { 
  
            String s = ""; 
  
            while (i < ch.length && ch[i] != ' ') { 
  
               
                s = s + ch[i]; 
                i++; 
            } 
  
            if (s.length() > 0)  
                System.out.println(s + "->" + s.length());             
        } 
    } 
    public static void main(String[] args) 
    { 
        String str = "geeks for geeks"; 
        count(str); 
    } 
} 

Q 6 :Given a string, check whether it is a formed by concatenating the same string 3 times. 

import java.util.Scanner;

public class Solution6 {
	public static void main(String args[]) 
{ 
		System.out.println("Enter your Sentence....");
		Scanner sc=new Scanner(System.in);
		String s=sc.nextLine();
		int c=0;
		if(s.length()%3==0)
		{ 
			int k=s.length()/3;
			String s1=s.substring(0,k);
			for(int i=0;i<s.length();i=i+k)
			{
				if(s1.equalsIgnoreCase(s.substring(i, i+k)))
				{
					c++;
				}
			}
			System.out.println("True :: three times is repeating character present in string ");
		}
		else
		System.out.println("False");
        sc.close();
}
}

Q 7:Given a string , output another string where the case of the characters is reversed. 

import java.util.Scanner;
class Solution7{ 
	
	static void caseChange(StringBuffer string) 
	{ 
		int n = string.length(); 
		for (int i=0; i<n; i++) 
		{ 
			Character c = string.charAt(i); 
			if (Character.isLowerCase(c)) 
				string.replace(i, i+1, Character.toUpperCase(c)+""); 
			else
				string.replace(i, i+1, Character.toLowerCase(c)+""); 
			
		} 
	} 
	
	public static void main(String[] args) 
	{  
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the string that you want reverse ");
		String s=sc.nextLine();
		StringBuffer string = new StringBuffer(s); 
		caseChange(string); 
		System.out.println(string); 
		sc.close();
		} 
} 


Q 8 : Write a program to reverse a string. 


import java.util.Scanner;
class ReverseofaString
{
	public static void main(String[ ] arg)
	{
	String str;
	Scanner scan=new Scanner(System.in);
	
	System.out.print("Enter a string : ");
	str=scan.nextLine();	
	
	char[] ch=str.toCharArray(); 
	System.out.println("Reverse of a String is :"); 
	
	int j=ch.length;
	for(int i=j;i>0;i--)
	{
	System.out.print(ch[i-1]); 
	}
	}
}


Q 9:Write a program which accepts two string and prints all unique characters which are common in
both stirngs.


import java.io.*; 
import java.util.*; 
  

public class Simstrings 
{ 
    static final int MAX_CHAR = 26; 
  
    static void printCommon(String s1, String s2) 
    { 
     
        int[] a1 = new int[MAX_CHAR]; 
        int[] a2 = new int[MAX_CHAR]; 
  
        int length1 = s1.length(); 
        int length2 = s2.length(); 
  
        for (int i = 0 ; i < length1 ; i++) 
           a1[s1.charAt(i) - 'a'] += 1; 
  
        for (int i = 0 ; i < length2 ; i++) 
           a2[s2.charAt(i) - 'a'] += 1; 
  
      
        for (int i = 0 ; i < MAX_CHAR ; i++) 
        { 
            if (a1[i] != 0 && a2[i] != 0) 
            { 
                
                for (int j = 0 ; j < Math.min(a1[i], a2[i]) ; j++) 
                    System.out.print(((char)(i + 'a'))); 
            } 
        } 
    } 
  
   
    public static void main(String[] args) throws IOException 
    { 
        String s1 = "geeksforgeeks", s2 = "practiceforgeeks"; 
        printCommon(s1, s2); 
    } 
} 